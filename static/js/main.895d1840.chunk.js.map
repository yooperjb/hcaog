{"version":3,"sources":["components/Sidebar/style.module.css","components/LayerToggle/style.module.css","components/ToolTip/style.module.css","config/sources.js","config/layers.js","images/logo.png","contexts/GlobalContext/actions.js","contexts/GlobalContext/reducer.js","contexts/GlobalContext/index.js","contexts/LayerVisibilityContext/actions.js","contexts/LayerVisibilityContext/reducer.js","contexts/LayerVisibilityContext/index.js","components/ToolTip/index.js","components/LayerToggle/index.js","components/Sidebar/index.js","util/layers.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SOURCES","get","id","type","url","SOURCE_LAYERS","LAYER_WEIGHTS","makeLayerBuilder","sourceId","sourceLayerId","layout","baseLayout","paint","basePaint","filter","layerName","source","buildIconLayer","makeSymbolLayerBuilder","buildRouteLayer","makeLineLayerBuilder","ICONS","layers","map","details","name","ROUTES","description","connectors","setFocusedLayer","layer","value","clearFocusedLayer","state","focusedLayer","undefined","initialState","GlobalContext","createContext","GlobalProvider","children","globalState","dispatch","useReducer","reducer","Provider","useGlobals","useContext","toggleVisibility","ClassI","ClassII","ClassIII","Trail","LayerVisibilityContext","LayerVisibilityContextProvider","visibilityState","useLayerVisibility","setOffset","offset","document","documentElement","style","setProperty","removeProperty","ToolTip","text","direction","tooltipRef","useRef","className","styles","onMouseEnter","current","rect","getBoundingClientRect","deltaX","Math","floor","min","window","innerWidth","right","onMouseLeave","ref","LayerToggle","layerId","dispatchGlobals","layerVisibility","dispatchVisibility","onClick","defaultChecked","htmlFor","Sidebar","src","logo","alt","target","href","rel","Object","entries","LAYER_FOCUS_WEIGHTS","symbol","line","filterVisibleLayers","focusedLayerId","baseLayerId","visibleLayers","useMemo","layersOrderedByFocus","i","sort","ai","a","bi","b","Array","from","before","applyFocusStyleToLayer","App","viewport","setViewport","useState","latitude","longitude","zoom","selectedBikePoint","setSelectedBikePoint","selectedBikeRoute","setSelectedBikeRoute","LngLat","setLngLat","cursorStyle","setCursorStyle","globals","logBikePoint","event","features","properties","lngLat","logBikeRoute","console","log","getCursor","returnCursor","iconLayers","routeLayers","slice","flexGrow","height","mapStyle","accessToken","process","onViewportChange","onHover","onLeave","lat","lng","closeButton","onClose","Type","Name","Location","Website","type_2021","Bikes_Allo","showZoom","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.895d1840.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"style_sidebar__20YO8\",\"summary\":\"style_summary__3lUAu\",\"logo\":\"style_logo__1e-ND\",\"layers\":\"style_layers__2wW6l\",\"layers-header\":\"style_layers-header__2EIjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layer-toggle\":\"style_layer-toggle__1Ve87\",\"layer-checkbox\":\"style_layer-checkbox__2k3sd\",\"line\":\"style_line__WqDAE\",\"ClassI\":\"style_ClassI__30Qrr\",\"ClassII\":\"style_ClassII__2hfiF\",\"ClassIII\":\"style_ClassIII__1lxDv\",\"Trail\":\"style_Trail__2Cez4\",\"icon\":\"style_icon__nJFy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"style_tooltip__4MSBX\",\"tooltip-text\":\"style_tooltip-text__2NP0t\",\"visible\":\"style_visible__1BmWb\",\"tooltip-top\":\"style_tooltip-top__1aRl1\"};","export const SOURCES = {\r\n  get: (id) => ({ ...SOURCES[id], id}),\r\n  'bike-points': {\r\n    id: 'bike-points',\r\n    type: 'vector',\r\n    url: 'mapbox://yooperjb.96kntbve',\r\n  },\r\n  'bike-routes': {\r\n    id: 'bike-routes',\r\n    type: 'vector',\r\n    url: 'mapbox://yooperjb.3kf292c5',\r\n  },\r\n};\r\n\r\nexport const SOURCE_LAYERS = {\r\n  'bike-points': 'bike_points-8mbmdl', \r\n  'bike-routes': 'bike_routes-2nr3p1', \r\n};\r\n","import { SOURCES, SOURCE_LAYERS } from './sources';\r\n\r\n// Set default symbol and line size\r\nexport const LAYER_WEIGHTS = {\r\n  symbol: 1,\r\n  line: 2,\r\n};\r\n\r\nconst makeLayerBuilder = ({\r\n  type,\r\n  sourceId,\r\n  sourceLayerId,\r\n  layout: baseLayout,\r\n  paint: basePaint,\r\n  filter\r\n}) =>  {\r\n  return ({ id, layerName, layout, paint }) => ({\r\n    id,\r\n    type,\r\n    source: sourceId,\r\n    'source-layer': SOURCE_LAYERS[sourceLayerId], \r\n    layout: {\r\n      ...baseLayout,\r\n      ...layout\r\n    },\r\n    paint: {\r\n      ...basePaint,\r\n      ...paint\r\n    },\r\n    filter: filter(layerName),\r\n  }\r\n  );\r\n};\r\n\r\nconst makeSymbolLayerBuilder = ({\r\n  sourceId,\r\n  sourceLayerId,\r\n  filter\r\n}) => makeLayerBuilder({\r\n  type: 'symbol',\r\n  sourceId,\r\n  sourceLayerId,\r\n  layout: {\r\n    //icon: 'bicycle-11',\r\n    'icon-size': LAYER_WEIGHTS.symbol,\r\n    'icon-allow-overlap': false,\r\n    'visibility': 'visible',\r\n    \r\n  },\r\n  paint: {\r\n    // 'icon-opacity': 1,\r\n  },\r\n  filter\r\n});\r\n\r\nconst makeLineLayerBuilder = ({\r\n  sourceId,\r\n  sourceLayerId,\r\n  filter\r\n}) => makeLayerBuilder({\r\n  type: 'line',\r\n  sourceId,\r\n  sourceLayerId,\r\n  layout: {\r\n    'line-cap': 'round',\r\n    'line-join': 'round',\r\n    'visibility': 'visible'\r\n  },\r\n  paint: {\r\n    'line-width': LAYER_WEIGHTS.line,\r\n  },\r\n  filter\r\n});\r\n\r\nconst buildIconLayer = makeSymbolLayerBuilder({\r\n  sourceId: 'bike-points',\r\n  sourceLayerId: 'bike-points',\r\n  filter: (layerName) => ['==', 'Type', layerName]\r\n});\r\nconst buildRouteLayer = makeLineLayerBuilder({\r\n  sourceId: 'bike-routes',\r\n  sourceLayerId: 'bike-routes',\r\n  filter: (layerName) => ['==', 'type_2021', layerName]\r\n});\r\n\r\nexport const ICONS = {\r\n  source: SOURCES.get('bike-points'),\r\n  layers: [\r\n    {\r\n      id: 'bike-shops',\r\n      layout:{\r\n        'icon-image': 'hcaog-hardware-15'},\r\n      paint: {\r\n        'icon-color': 'black',\r\n      },\r\n      layerName: 'Bicycle Shop'\r\n    },\r\n    {\r\n      id: 'bike-parking',\r\n      layout:{\r\n        'icon-image': 'hcaog-parking-15'\r\n      },\r\n      paint: {\r\n        'icon-color': 'black',\r\n      },\r\n      layerName: 'Bicycle Parking'\r\n    },\r\n    {\r\n      id: 'tool-station',\r\n      layout:{\r\n        'icon-image': 'hardware-15'\r\n      },\r\n      layerName: 'Tool Station'\r\n    },\r\n  ].map(buildIconLayer),\r\n  details: {\r\n    'bike-shops': {\r\n      name: 'Bike Shops'\r\n    },\r\n    'bike-parking': {\r\n      name: 'Bike Parking'\r\n    },\r\n    'tool-station': {\r\n      name: 'Tool Station'\r\n    },\r\n  }\r\n};\r\n\r\nexport const ROUTES = {\r\n  source: SOURCES.get('bike-routes'),\r\n  layers: [\r\n    {\r\n      id: 'ClassI', \r\n      paint: {\r\n        'line-color': '#b50707',\r\n      },\r\n      layerName: 'Existing Class I',\r\n    },\r\n    {\r\n      id: 'ClassII', \r\n      paint: {\r\n        'line-color': 'orange',\r\n      },\r\n      layerName: 'Existing Class II',\r\n    },\r\n    {\r\n      id: 'ClassIII', \r\n      paint: {\r\n        'line-color': '#eded5c',\r\n      },\r\n      layerName: 'Existing Class III',\r\n    },\r\n    {\r\n      id: 'Trail', \r\n      paint: {\r\n        'line-color': '#baa77c',\r\n        'line-dasharray': [1,3],\r\n        //\"line-opacity\": 1,\r\n      },\r\n      layerName: 'Existing Trail',\r\n    },\r\n  ].map(buildRouteLayer),\r\n  details: {\r\n    'ClassI': {\r\n      name: 'Class I Bike Route',\r\n      description: 'A separated paved path for bicycles and pedestrians.'\r\n    },\r\n    'ClassII': {\r\n      name: 'Class II Bike Route',\r\n      description: 'A restricted right-of-way for bicycles along the side of a street (typically 5 feet wide). A thick white line separates the auto and bike lanes. Motor vehicles may merge into these lanes to make turns.'\r\n    },\r\n    'ClassIII': {\r\n      name: 'Class III Bike Route',\r\n      description: 'A travel lane shared by bicycles and motor vehicles designated only by signs or pavement markings. This type of facility mainly informs motorists of preferred cycling routes.'\r\n    },\r\n    'Trail': {\r\n      name: 'Natural Surface Trails',\r\n      description: 'A dirt or gravel single-track paths that are bicycle compatible.'\r\n    },\r\n  }\r\n};\r\n\r\nexport const connectors = {\r\n  details: {\r\n    'familyfriendly': {\r\n      name: 'Family Friendly',\r\n    },\r\n    'intermediate': {\r\n      name: 'Intermediate',\r\n    },\r\n    'advanced': {\r\n      name: 'Advanced',\r\n    },\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default { icons: ICONS, routes: ROUTES };\r\n","export default __webpack_public_path__ + \"static/media/logo.3d93fbe4.png\";","/**\r\n * @param {string} layer - layer to focus\r\n */\r\nexport const setFocusedLayer = (layer) => {\r\n  return {\r\n    type: setFocusedLayer,\r\n    value: layer\r\n  };\r\n};\r\n/**\r\n */\r\nexport const clearFocusedLayer = () => {\r\n  return {\r\n    type: clearFocusedLayer\r\n  };\r\n};\r\n","import { setFocusedLayer, clearFocusedLayer } from './actions';\r\n\r\nexport default (state, {type, value}) => {\r\n  switch (type) {\r\n  case setFocusedLayer:\r\n    return { ...state, focusedLayer: value };\r\n  case clearFocusedLayer:\r\n    return { ...state, focusedLayer: undefined };\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { createContext, useContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\nconst initialState = {\r\n  focusedLayer: 'class1',\r\n};\r\n\r\nconst GlobalContext = createContext(initialState);\r\n\r\nexport * from './actions';\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n  const [globalState, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={[globalState, dispatch]}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nGlobalProvider.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport const useGlobals = () => useContext(GlobalContext);\r\n\r\nexport default GlobalProvider;\r\n","/**\r\n * @param {string} layer - the layer to toggle visibility for\r\n */\r\nexport const toggleVisibility = (layer) => {\r\n  return {\r\n    type: toggleVisibility,\r\n    value: layer\r\n  };\r\n};\r\n","import { toggleVisibility } from './actions';\r\n\r\nexport default (state, {type, value}) => {\r\n  switch (type) {\r\n  case toggleVisibility:\r\n    return { ...state, [value]: !state[value] };\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { createContext, useContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\nconst initialState = {\r\n  ClassI: true,\r\n  ClassII: true,\r\n  ClassIII: true,\r\n  Trail: true,\r\n  'bike-parking': true,\r\n  'bike-shops': true,\r\n  'tool-station': true\r\n};\r\n\r\nconst LayerVisibilityContext = createContext(initialState);\r\n\r\nexport * from './actions';\r\n\r\nexport const LayerVisibilityContextProvider = ({children}) => {\r\n  const [visibilityState, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <LayerVisibilityContext.Provider value={[visibilityState, dispatch]}>\r\n      {children}\r\n    </LayerVisibilityContext.Provider>\r\n  );\r\n};\r\n\r\nLayerVisibilityContextProvider.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport const useLayerVisibility = () => useContext(LayerVisibilityContext);\r\n\r\nexport default LayerVisibilityContextProvider;\r\n","import PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport styles from './style.module.css';\r\n\r\nconst setOffset = (offset) => offset\r\n  ? document.documentElement.style.setProperty('--tooltip-offset', `${offset}px`)\r\n  : document.documentElement.style.removeProperty('--tooltip-offset');\r\n\r\nconst ToolTip = ({text, direction, children}) => {\r\n  const tooltipRef = useRef();\r\n  const updateOffset = () => {\r\n    if (!tooltipRef.current) return;\r\n    const rect = tooltipRef.current.getBoundingClientRect();\r\n    const deltaX = Math.floor(Math.min(0, window.innerWidth - rect.right));\r\n    setOffset(deltaX);\r\n  };\r\n  const clearOffset = () => setOffset(0);\r\n  return (\r\n    <span\r\n      className={`${styles['tooltip']} ${styles['tooltip-' + direction]}`}\r\n      onMouseEnter={updateOffset}\r\n      onMouseLeave={clearOffset}\r\n    >\r\n      {children}\r\n      <div\r\n        className={styles['tooltip-text']}\r\n        ref={tooltipRef}\r\n      >\r\n        {text}\r\n      </div>\r\n    </span>\r\n  );\r\n};\r\n\r\nToolTip.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  direction: PropTypes.oneOf(['top', 'bottom', 'left', 'right']).isRequired,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default ToolTip;\r\n","import PropTypes from 'prop-types';\r\nimport { clearFocusedLayer, setFocusedLayer, useGlobals } from '../../contexts/GlobalContext';\r\nimport { toggleVisibility, useLayerVisibility } from '../../contexts/LayerVisibilityContext';\r\nimport ToolTip from '../ToolTip';\r\nimport styles from './style.module.css';\r\n\r\n\r\n\r\nconst LayerToggle = ({ layerId, details: { name, description }, type }) => {\r\n  const [, dispatchGlobals] = useGlobals();\r\n  const [layerVisibility, dispatchVisibility] = useLayerVisibility();\r\n\r\n  const toggle = () => dispatchVisibility(toggleVisibility(layerId));\r\n  const focus = () => dispatchGlobals(setFocusedLayer(layerId));\r\n  const unfocus = () => dispatchGlobals(clearFocusedLayer(layerId));\r\n  \r\n  return (\r\n    <div\r\n      className={styles['layer-toggle']}\r\n    >\r\n      <span \r\n        onClick={toggle}\r\n        onMouseEnter={focus}\r\n        onMouseLeave={unfocus}\r\n      >\r\n        <div className={styles['layer-checkbox']}>\r\n          <input\r\n            type=\"checkbox\"\r\n            className={`${styles[type]} ${styles[layerId]}`}\r\n            defaultChecked={layerVisibility[layerId]}\r\n          />\r\n        </div>\r\n        <label htmlFor={styles[layerId]}>{name}</label>\r\n      </span>\r\n      {description && <ToolTip text={description} direction=\"top\">🛈<strong></strong></ToolTip>}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayerToggle.propTypes = {\r\n  layerId: PropTypes.string.isRequired,\r\n  details: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n  }).isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LayerToggle;\r\n","import React from 'react';\r\nimport { connectors, ICONS, ROUTES } from '../../config/layers';\r\nimport logo from '../../images/logo.png';\r\nimport LayerToggle from '../LayerToggle';\r\nimport styles from './style.module.css';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className={styles['sidebar']}>\r\n      <div className={styles['logo']}>\r\n        <img src={logo} alt=\"HCAGO Logo\" />\r\n      </div>\r\n      <div className={styles['summary']}>\r\n        <p>\r\n          Humboldt County offers incredible bike opportunities for\r\n          visitors and locals alike. Find a new way to commute to work,\r\n          explore the countryside, an adventurous mountain bike ride, and more!\r\n        </p>\r\n        <p>\r\n          To learn more about Humboldt County Bike Routes click\r\n          <a target=\"_blank\" href=\"https://www.hcaog.net/documents/humboldt-regional-bicycle-plan-2018\" rel=\"noreferrer\">here</a>.\r\n        </p>\r\n      </div>\r\n\r\n      <div className={styles['layers']}>\r\n        <h3 className={styles['layers-header']}>Existing Bike Routes</h3>\r\n        {\r\n          Object.entries(ROUTES.details)\r\n            .map(([layerId, details]) => (\r\n              <LayerToggle\r\n                key={layerId}\r\n                layerId={layerId}\r\n                details={details}\r\n                type=\"line\"\r\n              />\r\n            ))\r\n        }\r\n        {\r\n          Object.entries(ICONS.details)\r\n            .map(([layerId, details]) => (\r\n              <LayerToggle\r\n                key={layerId}\r\n                layerId={layerId}\r\n                details={details}\r\n                type=\"icon\"\r\n              />\r\n            ))\r\n        }\r\n        <h3 className={styles['layers-header']}>Connector Routes</h3>\r\n        {\r\n          Object.entries(connectors.details)\r\n            .map(([layerId, details]) => (\r\n              <LayerToggle\r\n                key={layerId}\r\n                layerId={layerId}\r\n                details={details}\r\n                type=\"icon\"\r\n              />\r\n            ))\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useMemo } from 'react';\r\nimport { LAYER_WEIGHTS } from '../config/layers';\r\n\r\nconst LAYER_FOCUS_WEIGHTS = {\r\n  symbol: LAYER_WEIGHTS.symbol * 1.5,\r\n  line: LAYER_WEIGHTS.line * 2,\r\n};\r\n\r\nexport const filterVisibleLayers = (\r\n  layers,\r\n  layerVisibility,\r\n  focusedLayerId,\r\n  baseLayerId\r\n) => {\r\n  const visibleLayers = useMemo(\r\n    () => layers.filter((layer) => layerVisibility[layer.id]),\r\n    [layers, layerVisibility]\r\n  );\r\n  const layersOrderedByFocus = useMemo(\r\n    () => visibleLayers.map((layer, i) => [i, layer])\r\n      .sort(([ai, a], [bi, b]) => {\r\n        if (a.id == focusedLayerId) return -1;\r\n        if (b.id == focusedLayerId) return 1;\r\n        return ai - bi;\r\n      })\r\n      .map(([,layer]) => layer),\r\n    [visibleLayers, focusedLayerId]\r\n  );\r\n  return Array.from(\r\n    useMemo(\r\n      () =>  layersOrderedByFocus.map((layer, i, layers) => ({\r\n        ...layer,\r\n        before: layers[i - 1]?.id ?? baseLayerId\r\n      })),\r\n      [layersOrderedByFocus, baseLayerId]\r\n    )\r\n  );\r\n};\r\nexport const applyFocusStyleToLayer = (layer) => {\r\n  switch (layer.type) {\r\n  case 'symbol':\r\n    return { \r\n      ...layer,\r\n      layout:{\r\n        ...layer.layout,\r\n        'icon-size': LAYER_FOCUS_WEIGHTS.symbol\r\n      },\r\n    };\r\n  case 'line':\r\n    return { \r\n      ...layer,\r\n      paint: {\r\n        ...layer.paint,\r\n        'line-width': LAYER_FOCUS_WEIGHTS.line,\r\n      }\r\n    };\r\n  }\r\n};\r\n","import MapGL, { GeolocateControl, Layer, NavigationControl, Popup, Source } from '@urbica/react-map-gl';\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport { ICONS, ROUTES } from './config/layers.js';\r\nimport { useGlobals } from './contexts/GlobalContext';\r\nimport { useLayerVisibility } from './contexts/LayerVisibilityContext';\r\nimport { applyFocusStyleToLayer, filterVisibleLayers } from './util/layers';\r\n\r\n//import ReactMapGl, {Marker, Popup, Source, Layer} from 'react-map-gl';\r\n\r\nconst App  = () => {\r\n\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 40.7450,\r\n    longitude: -123.8695,\r\n    zoom: 8,\r\n  });\r\n\r\n  // useState for Popups \r\n  const [selectedBikePoint, setSelectedBikePoint] = useState(null);\r\n  const [selectedBikeRoute, setSelectedBikeRoute] = useState(null);\r\n  const [LngLat, setLngLat] = useState(null);\r\n  // useState for Cursor style on hover\r\n  const [cursorStyle, setCursorStyle] = useState(null);\r\n\r\n  const [globals] = useGlobals();\r\n  const [ layerVisibility ] = useLayerVisibility();\r\n  \r\n  // Set bike point info to state for popup\r\n  const logBikePoint = (event) => {\r\n    //console.log(\"features\", event.features[0].properties);\r\n    setSelectedBikePoint(event.features[0].properties);\r\n    //console.log(\"lngLat\", event.lngLat);\r\n    setLngLat(event.lngLat);\r\n    //console.log(\"LngLat:\", LngLat);\r\n  };\r\n\r\n  // Set bike route info to state for popup\r\n  const logBikeRoute = (event) => {\r\n    setSelectedBikeRoute(event.features[0].properties);\r\n    console.log('Bike Route', selectedBikeRoute);\r\n    setLngLat(event.lngLat);\r\n    //console.log(\"LngLat:\", event.lngLat);\r\n  };\r\n\r\n  // set cursor to pointer on feature hover\r\n  const getCursor = () => () => {\r\n    setCursorStyle('pointer');\r\n    //dispatchGlobals(setFocusedLayer(layer));\r\n  };\r\n\r\n  // set cursor to back to default on feature leave\r\n  const returnCursor = () => {\r\n    setCursorStyle(null);\r\n    //dispatchGlobals(clearFocusedLayer());\r\n  };\r\n\r\n  const iconLayers = filterVisibleLayers(\r\n    ICONS.layers,\r\n    layerVisibility,\r\n    globals.focusedLayer\r\n  );\r\n  console.log('iconlayers', iconLayers);\r\n  //console.log('iconsource', ICONS.source);\r\n  // console.log('icons',ICONS);\r\n  \r\n  const routeLayers = filterVisibleLayers(\r\n    ROUTES.layers,\r\n    layerVisibility,\r\n    globals.focusedLayer,\r\n    ICONS.layers.slice(-1)[0]?.id\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MapGL\r\n        {...viewport}\r\n        style={{ flexGrow: '1', height: '100%' }}\r\n        mapStyle='mapbox://styles/yooperjb/ckot0y3yz3kd217lllr2akvdn'\r\n        // mapStyle='mapbox://styles/yooperjb/ckn6lzo7i08vu17nvv4tm9i6k'\r\n        accessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={setViewport}\r\n        cursorStyle={cursorStyle}\r\n      >\r\n        <Source {...ROUTES.source} >\r\n          {\r\n            routeLayers.map((layer) => (\r\n              <Layer\r\n                key={layer.id}\r\n                {...(globals.focusedLayer === layer.id\r\n                  ? applyFocusStyleToLayer(layer)\r\n                  : layer\r\n                )}\r\n                onHover={getCursor(layer.id)}\r\n                onClick={logBikeRoute}\r\n                onLeave={returnCursor}\r\n              />\r\n            ))\r\n          }\r\n        </Source>\r\n        <Source {...ICONS.source}>\r\n          {\r\n            iconLayers.map((layer) => (\r\n              <Layer\r\n                key={layer.id}\r\n                {\r\n                  ...(globals.focusedLayer === layer.id\r\n                    ? applyFocusStyleToLayer(layer)\r\n                    : layer\r\n                  )\r\n                }\r\n                onHover={getCursor(layer.id)}\r\n                onClick={logBikePoint}\r\n                onLeave={returnCursor}\r\n                \r\n              />\r\n            ))\r\n          }\r\n        </Source>\r\n        \r\n        {/* Testing icon layers */}\r\n        {/* <Source {...ICONS.source}>\r\n          <Layer\r\n            {...ICONS.layers[0]}>\r\n\r\n          </Layer>\r\n\r\n        </Source> */}\r\n        {\r\n          selectedBikePoint && LngLat\r\n            ? (\r\n              <Popup\r\n                latitude={LngLat.lat}\r\n                longitude={LngLat.lng}\r\n                closeButton={false}\r\n                className=\"bikePointsPopup\"\r\n                onClose={() => setSelectedBikePoint(null) }>\r\n\r\n                <div>\r\n                  <h3>{selectedBikePoint.Type}</h3>\r\n                  <p>{selectedBikePoint.Name}</p>\r\n                  <p>{selectedBikePoint.Location}</p>\r\n                  {\r\n                    selectedBikePoint.Website\r\n                      ? (\r\n                        <p><a target=\"_blank\" href={selectedBikePoint.Website} rel=\"noreferrer\">Website</a></p>\r\n                      )\r\n                      : null\r\n                  }\r\n                </div>\r\n              </Popup>\r\n            )\r\n            : null\r\n        }\r\n\r\n        {\r\n          (selectedBikeRoute && LngLat)\r\n            ? (\r\n              <Popup\r\n                latitude={LngLat.lat}\r\n                longitude={LngLat.lng}\r\n                closeButton={false}\r\n                className=\"bikeRoutePopup\"\r\n                onClose={() => setSelectedBikeRoute(null)}>\r\n                <div>\r\n                  <h3>{selectedBikeRoute.type_2021}</h3>\r\n                  <p>{selectedBikeRoute.Name}</p>\r\n                  <p>Bikes Allowed: {selectedBikeRoute.Bikes_Allo}</p>\r\n                </div>\r\n              </Popup>\r\n            )\r\n            : null\r\n        }\r\n        <NavigationControl showZoom position='top-right' />\r\n        <GeolocateControl></GeolocateControl>\r\n      </MapGL>\r\n      <Sidebar></Sidebar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { GlobalProvider } from './contexts/GlobalContext';\r\nimport { LayerVisibilityContextProvider } from './contexts/LayerVisibilityContext';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalProvider>\r\n      <LayerVisibilityContextProvider>\r\n        <App />\r\n      </LayerVisibilityContextProvider>\r\n    </GlobalProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}